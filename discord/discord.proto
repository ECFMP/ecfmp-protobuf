syntax = "proto3";
option go_package = "ecfmp.vatsim.net/grpc/discord";

package ecfmp_discord;

/**
 * API for interacting with the ECFMP discord service.
 */
service Discord {

  /**
   * Create a new message in the specified channel.
   */
  rpc Create(CreateRequest) returns (CreateResponse);

  /**
   * Update an existing message.
   */
  rpc Update(UpdateRequest) returns (UpdateResponse);
}

message DiscordEmbedsFields {
  // The name of the field.
  string name = 1;

  // The value of the field.
  string value = 2;

  // Whether or not the field should be displayed inline.
  bool inline = 3;
}

/**
 * Embeds to include in a message.
 */
message DiscordEmbeds {
  // The title of the embed.
  string title = 1;

  // The description of the embed.
  string description = 2;

  // The url to link to.
  string url = 3;

  // The color of the embed.
  int32 color = 4;

  // The fields of the embed.
  repeated DiscordEmbedsFields fields = 5;
}

/**
 * Request to create a new message on a specified channel.
 */
message CreateRequest {
  // The discord channel id to create the message on.
  string channel = 1;

  // The content of the message.
  string content = 2;

  // The embeds to include in the message.
  repeated DiscordEmbeds embeds = 3;
}

/**
 * Response from the create request. Contains the ID of the created message on
 * the discord service that can be used to update the message in the future.
 */
message CreateResponse { string id = 1; }

/**
 * Request to update an existing message.
 */
message UpdateRequest {
  string id = 1;
  string content = 2;
  repeated DiscordEmbeds embeds = 3;
}

/**
 * Response from the update request. Is empty.
 */
message UpdateResponse {}
